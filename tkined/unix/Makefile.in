# This is a Makefile for scotty. If it has the name "Makefile.in"
# then it is a template for a Makefile;  to generate the actual Makefile,
# run "./configure", which is a configuration script generated by the
# "autoconf" program (constructs like "@foo@" will get replaced in the
# actual Makefile).
#
# @(#) $Id: Makefile.in,v 1.1.1.1 2006/12/07 12:16:59 karl Exp $

TNM_VERSION =	@TNM_VERSION@
TKI_VERSION =	@TKI_VERSION@
TCL_VERSION =	@TCL_VERSION@
TK_VERSION  =	@TK_VERSION@

#----------------------------------------------------------------
# Things you can change to personalize the Makefile for your own
# site (you can make these changes in either Makefile.in or
# Makefile, but changes to Makefile will get lost if you re-run
# the configuration script).
#----------------------------------------------------------------

# Default top-level directories in which to install architecture-
# specific files (exec_prefix) and machine-independent files such
# as scripts (prefix).  The values specified here may be overridden
# at configure-time with the --exec-prefix and --prefix options
# to the "configure" script.

prefix =	@prefix@
exec_prefix =	@exec_prefix@

# Directory in which to install the program scotty:
BIN_INSTALL_DIR =	$(INSTALL_ROOT)$(exec_prefix)/bin

# Directory in which to install dynamic loadable modules:
LIB_INSTALL_DIR =       $(INSTALL_ROOT)$(exec_prefix)/lib

# Directory in which dynamic loadable modules are installed:
LIB_RUNTIME_DIR =       $(exec_prefix)/lib

# Directory in which to install library files belonging to the extension.
TNM_INSTALL_DIR =	$(INSTALL_ROOT)$(prefix)/lib/tnm$(TNM_VERSION)

# Directory in which to install the library of tkined scripts.
TKI_INSTALL_DIR =	$(INSTALL_ROOT)$(prefix)/lib/tkined$(TKI_VERSION)

# Top-level directory for manual entries:
MAN_INSTALL_DIR =	$(INSTALL_ROOT)$(prefix)/man

# Directory in which to install the manual entries:
MAN1_INSTALL_DIR =	$(MAN_INSTALL_DIR)/man1

# Directory in which to install manual entry for nmtrapd and nmicmpd:
MAN8_INSTALL_DIR =	$(MAN_INSTALL_DIR)/man8

# Directory in which to install manual entry for command:
MANN_INSTALL_DIR =	$(MAN_INSTALL_DIR)/mann

# To change the compiler switches, for example to change from -O
# to -g, change the following line:
CFLAGS = -O # -DINET6
# for NetBSD is possible to add extra protection (not fully tested yet)
# CFLAGS = -O2 -D_FORTIFY_SOURCE=1 -fstack-protector-all

# NMICMPD should contain the full path to the installed nmicmpd binary.
NMICMPD = $(BIN_INSTALL_DIR)/nmicmpd

# NMTRAPD should contain the full path to the installed nmtrapd binary.
NMTRAPD = $(BIN_INSTALL_DIR)/nmtrapd

# A "-I" switch that can be used when compiling to make all of the
# X11 include files accessible (the configure script will try to
# set this value, and will cause it to be an empty string if the
# include files are accessible via /usr/include).
X11_INCLUDES =	@TK_XINCLUDES@

# Linker switch(es) to use to link with the X11 library archive (the
# configure script will try to set this value automatically, but you
# can override it).
X11_LIBS = @TK_XLIBSW@

# Top-level directory in which Tcl's platform-specific files (e.g.
# executables) are installed.
TCL_EXEC_PREFIX=@TCL_EXEC_PREFIX@

# The full name of the tclsh executable (including the full path
# and the Tcl version number).
TCL_TCLSH=$(TCL_EXEC_PREFIX)/bin/tclsh$(TCL_VERSION)

# Top-level directory in which Tk's platform-specific files (e.g.
# executables) are installed.
TK_EXEC_PREFIX=@TK_EXEC_PREFIX@

# The full name of the wish executable (including the full path
# and the Tk version number).
TK_WISH=$(TK_EXEC_PREFIX)/bin/wish$(TK_VERSION)

# A "-I" switch that can be used when compiling to make all the
# Tcl include files accessible (the configure script will try to
# set this value).
TCL_INCLUDES =	@TCL_INCLUDES@

# Linker switch(es) to use to link with the Tcl library archive (the
# configure script will try to set this value automatically, but you
# can override it).
TCL_LIB_SPEC = @TCL_LIB_SPEC@

# Libraries built with optimization or debugging switches have this
# additional extension.
TCL_DBGX = @TCL_DBGX@

# A "-I" switch that can be used when compiling to make all the
# Tk include files accessible (the configure script will try to
# set this value).
TK_INCLUDES =	@TK_INCLUDES@

# Linker switch(es) to use to link with the Tk library archive (the
# configure script will try to set this value automatically, but you
# can override it).
TK_LIB_SPEC = @TK_LIB_SPEC@

# Libraries built with optimization or debugging switches have this
# additional extension.
TK_DBGX = @TK_DBGX@

# Linker switch(es) to link platform depended library archives (the
# configure script will try to set this value automatically, but you
# can override it).
LIBS = @LIBS@ # -lresolv

# Linker switch(s) to link platform depended library archives for
# package utilities (the configure script will try to set this value
# automatically as well, but you can override it).
NM_LIBS = @NM_LIBS@ # -lresolv

# To disable ANSI-C procedure prototypes reverse the comment 
# characters on the following lines:
PROTO_FLAGS =
#PROTO_FLAGS = -DNO_PROTOTYPE

# To enable memory debugging reverse the comment characters on the following
# lines.  Warning:  if you enable memory debugging, you must do it
# *everywhere*, including all the code that calls Tcl, and you must use
# ckalloc and ckfree everywhere instead of malloc and free.
MEM_DEBUG_FLAGS =
#MEM_DEBUG_FLAGS = -DTCL_MEM_DEBUG

# To enable benchmarking of SNMP agents reverse the comment characters on
# the following line. This will enable some code to keep track of SNMP
# statistics. You want to have this turned off by default.
TNM_BENCH_FLAGS =
#TNM_BENCH_FLAGS = -DTNM_SNMP_BENCH

# Some versions of make, like SGI's, use the following variable to
# determine which shell to use for executing commands:
SHELL =		/bin/sh

# Some systems have broken mkdir commands. The definition below allows
# you to use a replacement (e.g. GNU mkdir) during the install process.
MKDIR =		mkdir

#----------------------------------------------------------------
# The symbols below provide support for dynamic loading and shared
# libraries.  The values of the symbols are normally set by the
# configure script.  You shouldn't normally need to modify any of
# these definitions by hand.  However, you can reverse the comments
# on the pairs of lines to force "no dynamic loading or shared
# libraries".
#----------------------------------------------------------------

# Generic flags to pass to the compiler:
GENERIC_CFLAGS = @GENERIC_CFLAGS@
#GENERIC_CFLAGS =

# Flags to pass to cc when compiling the components of a shared
# library:
SHLIB_CFLAGS = @SHLIB_CFLAGS@
#SHLIB_CFLAGS =

# Base command to use for combining object files into a shared
# library:
SHLIB_LD = @SHLIB_LD@

# Suffix to use for the name of the shared library.  An empty string
# means we don't know how to use shared libraries on this platform.
SHLIB_SUFFIX = @SHLIB_SUFFIX@
#SHLIB_SUFFIX = .a

# Library file(s) to include in tclsh and other base applications
# in order to provide facilities needed by DLOBJ above.
DL_LIBS = @DL_LIBS@
#DL_LIBS =

# Flags to pass to the compiler when linking object files into
# an executable wish or tktest binary.
LD_FLAGS = @LD_FLAGS@
#LD_FLAGS =

# Flags to pass to the compiler to tell the run-time dynamic linker 
# where to look for shared libraries.
LD_SEARCH_FLAGS = @LD_SEARCH_FLAGS@
#LD_SEARCH_FLAGS =

#----------------------------------------------------------------
# The information below is modified by the configure script when
# Makefile is generated from Makefile.in.  You shouldn't normally
# modify any of this stuff by hand.
#----------------------------------------------------------------

INSTALL =		@INSTALL@
INSTALL_PROGRAM =	@INSTALL_PROGRAM@
INSTALL_DATA =		@INSTALL_DATA@
RPCGEN =		@RPCGEN@
LEX =			@LEX@
YACC =			@YACC@

SRC_DIR =		@srcdir@/..
TOP_DIR =		@srcdir@/..
DOC_DIR =		$(TOP_DIR)/doc
UNIX_DIR =		$(TOP_DIR)/unix
WIN_DIR =		$(TOP_DIR)/win
TNM_DIR =		$(TOP_DIR)/tnm
TKI_DIR =		$(TOP_DIR)/tki
NEW_DIR =		$(TOP_DIR)/new

TNM_AGENT_DIR =		$(TNM_DIR)/agents
TNM_LIBRARY_DIR =	$(TNM_DIR)/library
TNM_EXAMPLES_DIR =	$(TNM_DIR)/examples
TNM_MIB_DIR =		$(TNM_DIR)/mibs
TNM_SNMP_DIR =		$(TNM_DIR)/snmp
TNM_GENERIC_DIR =	$(TNM_DIR)/generic
TNM_TEST_DIR =		$(TNM_DIR)/tests

TKI_GENERIC_DIR =	$(TKI_DIR)/generic
TKI_APPS_DIR =		$(TKI_DIR)/apps
TKI_LIBRARY_DIR =	$(TKI_DIR)/library

#----------------------------------------------------------------
# The information below should be usable as is.  The configure
# script won't modify it and you shouldn't need to modify it
# either.
#----------------------------------------------------------------

CC =		@CC@
LD =		@CC@

CC_SWITCHES	= $(CFLAGS) $(PROTO_FLAGS) $(SHLIB_CFLAGS) $(MEM_DEBUG_FLAGS) $(TNM_BENCH_FLAGS)

TNM_CC_SWITCHES = $(CC_SWITCHES) -I. -I$(TNM_GENERIC_DIR) $(TCL_INCLUDES)
TKI_CC_SWITCHES	= $(CC_SWITCHES) -I. -I$(TKI_GENERIC_DIR) $(TCL_INCLUDES) $(TK_INCLUDES) $(X11_INCLUDES)

TNM_GENERIC_SRCS = $(TNM_GENERIC_DIR)/tnmInit.c \
		$(TNM_GENERIC_DIR)/tnmUtil.c \
		$(TNM_GENERIC_DIR)/tnmJob.c \
		$(TNM_GENERIC_DIR)/tnmIned.c \
		$(TNM_GENERIC_DIR)/tnmSyslog.c \
		$(TNM_GENERIC_DIR)/tnmIcmp.c \
		$(TNM_GENERIC_DIR)/tnmDns.c \
		$(TNM_GENERIC_DIR)/tnmUdp.c \
		$(TNM_GENERIC_DIR)/tnmSunRpc.c \
		$(TNM_GENERIC_DIR)/tnmNtp.c \
		$(TNM_GENERIC_DIR)/tnmNetdb.c \
		$(TNM_GENERIC_DIR)/tnmMap.c \
		$(TNM_GENERIC_DIR)/tnmMapUtil.c \
		$(TNM_GENERIC_DIR)/tnmMapEvent.c \
		$(TNM_GENERIC_DIR)/tnmMapNode.c \
		$(TNM_GENERIC_DIR)/tnmMapNet.c \
		$(TNM_GENERIC_DIR)/tnmMapLink.c \
		$(TNM_GENERIC_DIR)/tnmMapPort.c \
		$(TNM_GENERIC_DIR)/tnmMapGroup.c \
		$(TNM_GENERIC_DIR)/tnmObj.c \
		$(TNM_GENERIC_DIR)/tnmSmx.c \
		$(UNIX_DIR)/tnmUnixInit.c \
		$(UNIX_DIR)/tnmUnixLog.c \
		$(UNIX_DIR)/tnmUnixSocket.c \
		$(UNIX_DIR)/tnmUnixIcmp.c \
		$(UNIX_DIR)/tnmUnixSnmp.c

TNM_GENERIC_OBJS = tnmInit.o \
		tnmUtil.o \
		tnmJob.o \
		tnmIned.o \
		tnmSyslog.o \
		tnmIcmp.o \
		tnmDns.o \
		tnmUdp.o \
		tnmSunRpc.o \
		tnmNtp.o \
		tnmNetdb.o \
		tnmMap.o \
		tnmMapUtil.o \
		tnmMapEvent.o \
		tnmMapNode.o \
		tnmMapNet.o \
		tnmMapLink.o \
		tnmMapPort.o \
		tnmMapGroup.o \
		tnmObj.o \
		tnmSmx.o \
		tnmUnixInit.o \
		tnmUnixLog.o \
		tnmUnixSocket.o \
		tnmUnixIcmp.o \
		tnmUnixSnmp.o \
		mount_clnt.o \
		mount_xdr.o \
		ether_clnt.o \
		ether_xdr.o \
		rstat_clnt.o \
		rstat_xdr.o \
		pcnfsd_clnt.o \
		pcnfsd_xdr.o

SNMP_SRCS =	$(TNM_SNMP_DIR)/tnmAsn1.c \
		$(TNM_SNMP_DIR)/tnmOidObj.c \
		$(TNM_SNMP_DIR)/tnmMD5.c \
		$(TNM_SNMP_DIR)/tnmSHA.c \
		$(TNM_SNMP_DIR)/tnmSnmpNet.c \
		$(TNM_SNMP_DIR)/tnmSnmpUtil.c \
		$(TNM_SNMP_DIR)/tnmSnmpUsm.c \
		$(TNM_SNMP_DIR)/tnmSnmpInst.c \
		$(TNM_SNMP_DIR)/tnmSnmpTcl.c \
		$(TNM_SNMP_DIR)/tnmSnmpSend.c \
		$(TNM_SNMP_DIR)/tnmSnmpRecv.c \
		$(TNM_SNMP_DIR)/tnmSnmpAgent.c \
		$(TNM_SNMP_DIR)/tnmMibUtil.c \
		$(TNM_SNMP_DIR)/tnmMibParser.c \
		$(TNM_SNMP_DIR)/tnmMibTree.c \
		$(TNM_SNMP_DIR)/tnmMibFrozen.c \
		$(TNM_SNMP_DIR)/tnmMibTcl.c \
		$(TNM_SNMP_DIR)/tnmSmiTcl.c

SNMP_OBJS =	tnmAsn1.o \
		tnmOidObj.o \
		tnmMD5.o \
		tnmSHA.o \
		tnmSnmpNet.o \
		tnmSnmpUtil.o \
		tnmSnmpUsm.o \
		tnmSnmpInst.o \
		tnmSnmpSend.o \
		tnmSnmpRecv.o \
		tnmSnmpAgent.o \
		tnmSnmpTcl.o \
		tnmMibUtil.o \
		tnmMibParser.o \
		tnmMibTree.o \
		tnmMibFrozen.o \
		tnmMibTcl.o \
		tnmSmiTcl.o

TNM_LIBRARY =	$(TNM_LIBRARY_DIR)/TnmDialog.tcl \
		$(TNM_LIBRARY_DIR)/TnmTerm.tcl \
		$(TNM_LIBRARY_DIR)/TnmMap.tcl \
		$(TNM_LIBRARY_DIR)/TnmInet.tcl \
		$(TNM_LIBRARY_DIR)/TnmMib.tcl \
		$(TNM_LIBRARY_DIR)/TnmSmxProfiles.tcl \
		$(TNM_LIBRARY_DIR)/TnmSnmp.tcl \
		$(TNM_LIBRARY_DIR)/TnmScriptMib.tcl \
		$(TNM_LIBRARY_DIR)/TnmIetf.tcl \
		$(TNM_LIBRARY_DIR)/TnmEther.tcl \
		$(TNM_LIBRARY_DIR)/TnmMonitor.tcl \
		$(TNM_LIBRARY_DIR)/init.tcl

TNM_AGENTS =	$(TNM_AGENT_DIR)/snmpd-tnm.tcl \
		$(TNM_AGENT_DIR)/snmpd-nfs.tcl \
		$(TNM_AGENT_DIR)/snmpd-proc.tcl

TNM_EXAMPLES =	$(TNM_EXAMPLES_DIR)/discover \
		$(TNM_EXAMPLES_DIR)/emok \
		$(TNM_EXAMPLES_DIR)/etherload \
		$(TNM_EXAMPLES_DIR)/ifload \
		$(TNM_EXAMPLES_DIR)/ifload2gif \
		$(TNM_EXAMPLES_DIR)/snmptrapd \
		$(TNM_EXAMPLES_DIR)/mibtree \
		$(TNM_EXAMPLES_DIR)/nslook \
		$(TNM_EXAMPLES_DIR)/rpcprobe \
		$(TNM_EXAMPLES_DIR)/rstat \
		$(TNM_EXAMPLES_DIR)/snmpwalk \
		$(TNM_EXAMPLES_DIR)/tcpspeed \
		$(TNM_EXAMPLES_DIR)/traceroute \
		$(TNM_EXAMPLES_DIR)/udploss \
		$(TNM_EXAMPLES_DIR)/udpspeed \
		$(TNM_EXAMPLES_DIR)/uiping \
		$(TNM_EXAMPLES_DIR)/yanny \
		$(TNM_EXAMPLES_DIR)/pcnfs \
		$(TNM_EXAMPLES_DIR)/mibgrep \
		$(TNM_EXAMPLES_DIR)/bridge

TNM_DOCS_1 =	scotty.1
TNM_DOCS_8 =	nmicmpd.8 \
		nmtrapd.8
TNM_DOCS_N =	Tnm.n \
		TnmDialog.n \
		TnmEther.n \
		TnmIetf.n \
		TnmInet.n \
		TnmMap.n \
		TnmMib.n \
		TnmSmxProfiles.n \
		TnmSnmp.n \
		TnmScriptMib.n \
		TnmTerm.n \
		dns.n \
		icmp.n \
		job.n \
		map.n \
		mib.n \
		netdb.n \
		ntp.n \
		smx.n \
		snmp.n \
		sunrpc.n \
		syslog.n \
		udp.n

TKI_DOCS_1 =	tkined.1
TKI_DOCS_N =	ined.n

TKI_APPS =	$(TKI_APPS_DIR)/manager.tcl \
		$(TKI_APPS_DIR)/event.tcl \
		$(TKI_APPS_DIR)/movie.tcl \
		$(TKI_APPS_DIR)/ip_trouble.tcl \
		$(TKI_APPS_DIR)/ip_monitor.tcl \
		$(TKI_APPS_DIR)/ip_layout.tcl \
		$(TKI_APPS_DIR)/ip_discover.tcl \
		$(TKI_APPS_DIR)/ip_world.tcl \
		$(TKI_APPS_DIR)/snmp_trouble.tcl \
		$(TKI_APPS_DIR)/snmp_config.tcl \
		$(TKI_APPS_DIR)/snmp_scriptmib.tcl \
		$(TKI_APPS_DIR)/snmp_monitor.tcl \
		$(TKI_APPS_DIR)/snmp_browser.tcl \
		$(TKI_APPS_DIR)/snmp_host.tcl \
		$(TKI_APPS_DIR)/snmp_cisco.tcl \
		$(TKI_APPS_DIR)/snmp_hp.tcl \
		$(TKI_APPS_DIR)/snmp_ucd.tcl \
		$(TKI_APPS_DIR)/clock.tcl \
		$(TKI_APPS_DIR)/game.tcl

TKI_MISC =	$(TKI_APPS_DIR)/library.tcl \
		$(TKI_APPS_DIR)/README \
		$(TKI_APPS_DIR)/world-map.xbm \
		$(TKI_APPS_DIR)/usa-map.xbm \
		$(TKI_APPS_DIR)/germany-map.xbm \
		$(TKI_APPS_DIR)/netherlands-map.xbm \
		$(TKI_APPS_DIR)/locations

TKI_LIBRARY =	$(TKI_LIBRARY_DIR)/Editor.tcl \
		$(TKI_LIBRARY_DIR)/Diagram.tcl \
		$(TKI_LIBRARY_DIR)/Command.tcl \
		$(TKI_LIBRARY_DIR)/Tool.tcl \
		$(TKI_LIBRARY_DIR)/Objects.tcl \
		$(TKI_LIBRARY_DIR)/Dialog.tcl \
		$(TKI_LIBRARY_DIR)/Event.tcl \
		$(TKI_LIBRARY_DIR)/Help.tcl \
		$(TKI_LIBRARY_DIR)/Misc.tcl

TKI_GENERIC_SRCS = $(TKI_GENERIC_DIR)/tkiEditor.c \
		$(TKI_GENERIC_DIR)/tkiObjects.c \
		$(TKI_GENERIC_DIR)/tkiMethods.c \
		$(TKI_GENERIC_DIR)/tkiMisc.c \
		$(TKI_GENERIC_DIR)/tkiFlash.c \
		$(TKI_GENERIC_DIR)/tkiStripchart.c \
		$(TKI_GENERIC_DIR)/tkiBarchart.c \
		$(TKI_GENERIC_DIR)/tkiUtil.c \
		$(TKI_GENERIC_DIR)/tkiInit.c \
		$(TKI_GENERIC_DIR)/tkiUnixInit.c

TKI_GENERIC_OBJS = tkiEditor.o \
		tkiObjects.o \
		tkiMethods.o \
		tkiMisc.o \
		tkiFlash.o \
		tkiStripchart.o \
		tkiBarchart.o \
		tkiUtil.o \
		tkiInit.o \
		tkiUnixInit.o

TNM_SRCS =	$(TNM_GENERIC_SRCS) $(SNMP_SRCS)
TNM_OBJS =	$(TNM_GENERIC_OBJS) $(SNMP_OBJS)
TKI_SRCS =	$(TKI_GENERIC_SRCS)

TKI_OBJS =	$(TKI_GENERIC_OBJS)

all: @BUILD_TARGETS@

scotty: tnm$(SHLIB_SUFFIX) nmicmpd nmtrapd scotty.o
	$(LD) $(LD_FLAGS) $(LD_SEARCH_FLAGS) -o scotty scotty.o $(TCL_LIB_SPEC) $(LIBS) $(DL_LIBS) -lm

tnm$(SHLIB_SUFFIX): $(TNM_OBJS)
	$(SHLIB_LD) $(TNM_OBJS) -o tnm$(SHLIB_SUFFIX) $(LIBS)

tkined: tkined$(SHLIB_SUFFIX) $(UNIX_DIR)/tkined.in
	@sed -e 's+%WISH%+$(TK_WISH)+' \
	    -e 's+%TCL_VERSION%+$(TCL_VERSION)+' \
	    -e 's+%TK_VERSION%+$(TK_VERSION)+' \
	    -e 's+%TKI_VERSION%+$(TKI_VERSION)+' \
	    $(UNIX_DIR)/tkined.in > tkined

tkined$(SHLIB_SUFFIX): $(TKI_GENERIC_OBJS)
	$(SHLIB_LD) $(TKI_GENERIC_OBJS) -o tkined$(SHLIB_SUFFIX) $(LIBS)

test:
	@echo
	@echo "The test suite requires that you first install scotty using"
	@echo "make install and make sinstall. To run the test suite, type"
	@echo "make check."
	@echo

check: tnm-check

tnm-check: scotty
	@TCLLIBPATH="$(TNM_INSTALL_DIR) $$TCLLIBPATH"; \
	export TCLLIBPATH; \
	pwd=`pwd`; cd $(TNM_TEST_DIR); $$pwd/scotty all.tcl

install: @INSTALL_TARGETS@
	@echo ""
	@echo "The Tnm extension includes two programs (nmicmpd, nmtrapd)"
	@echo "which require root permissions. Please get root permissions"
	@echo "and type >> make sinstall << to install them setuid root."
	@echo ""

install-bin: tnm-install-bin tki-install-bin

install-man: tnm-install-man tki-install-man

tnm-install: tnm-install-bin tnm-install-man tnm-install-library tnm-install-mibs tnm-install-agents tnm-install-site tnm-install-examples tnm-install-icons

tki-install: tki-install-bin tki-install-man tki-install-library tki-install-bitmaps tki-install-apps

tnm-install-bin: scotty tnm$(SHLIB_SUFFIX)
	@for i in $(BIN_INSTALL_DIR) $(LIB_INSTALL_DIR) $(TNM_INSTALL_DIR) ; \
	    do \
	    if [ ! -d $$i ] ; then \
		echo "Making directory $$i"; \
		$(MKDIR) -p $$i; \
		chmod 755 $$i; \
		else true; \
		fi; \
	    done;
	@echo "Installing scotty as $(BIN_INSTALL_DIR)/scotty$(TNM_VERSION)"
	@$(INSTALL_PROGRAM) scotty $(BIN_INSTALL_DIR)/scotty$(TNM_VERSION)
	@echo "Installing tnm$(TNM_VERSION)$(SHLIB_SUFFIX) as $(LIB_RUNTIME_DIR)/tnm$(TNM_VERSION)$(SHLIB_SUFFIX)"
	@$(INSTALL_DATA) tnm$(SHLIB_SUFFIX) $(LIB_INSTALL_DIR)/tnm$(TNM_VERSION)$(SHLIB_SUFFIX)
	@chmod 555 $(LIB_INSTALL_DIR)/tnm$(TNM_VERSION)$(SHLIB_SUFFIX)
	@echo 'package ifneeded Tnm $(TNM_VERSION) "load $(LIB_RUNTIME_DIR)/tnm$(TNM_VERSION)[info sharedlibextension]"' > $(TNM_INSTALL_DIR)/pkgIndex.tcl
	@[ -d tmp-install-tnm ] || mkdir tmp-install-tnm
	@echo 'package ifneeded Tnm $(TNM_VERSION) "load $(LIB_INSTALL_DIR)/tnm$(TNM_VERSION)[info sharedlibextension]"' > tmp-install-tnm/pkgIndex.tcl

tnm-install-man:
	@for i in $(MAN_INSTALL_DIR) $(MAN1_INSTALL_DIR) $(MAN8_INSTALL_DIR) $(MANN_INSTALL_DIR) ; \
	    do \
	    if [ ! -d $$i ] ; then \
		echo "Making directory $$i"; \
		$(MKDIR) -p $$i; \
		chmod 755 $$i; \
		else true; \
		fi; \
	    done;
	@cd $(DOC_DIR); for i in $(TNM_DOCS_1); \
	    do \
	    echo "Installing $(TOP_DIR)/doc/$$i"; \
	    rm -f $(MAN1_INSTALL_DIR)/$$i; \
	    sed -e '/man\.macros/r man.macros' -e '/man\.macros/d' \
		-e 's/%TNM_VERSION%/$(TNM_VERSION)/' \
		-e 's/%TKI_VERSION%/$(TKI_VERSION)/' \
		    $$i > $(MAN1_INSTALL_DIR)/$$i; \
	    chmod 444 $(MAN1_INSTALL_DIR)/$$i; \
	    done;
	@cd $(DOC_DIR); for i in $(TNM_DOCS_8); \
	    do \
	    echo "Installing $(TOP_DIR)/doc/$$i"; \
	    rm -f $(MAN8_INSTALL_DIR)/$$i; \
	    sed -e '/man\.macros/r man.macros' -e '/man\.macros/d' \
		-e 's/%TNM_VERSION%/$(TNM_VERSION)/' \
		-e 's/%TKI_VERSION%/$(TKI_VERSION)/' \
		    $$i > $(MAN8_INSTALL_DIR)/$$i; \
	    chmod 444 $(MAN8_INSTALL_DIR)/$$i; \
	    done;
	@cd $(DOC_DIR); for i in $(TNM_DOCS_N); \
	    do \
	    echo "Installing $(TOP_DIR)/doc/$$i"; \
	    rm -f $(MANN_INSTALL_DIR)/$$i; \
	    sed -e '/man\.macros/r man.macros' -e '/man\.macros/d' \
		-e 's/%TNM_VERSION%/$(TNM_VERSION)/' \
		-e 's/%TKI_VERSION%/$(TKI_VERSION)/' \
		    $$i > $(MANN_INSTALL_DIR)/$$i; \
	    chmod 444 $(MANN_INSTALL_DIR)/$$i; \
	    done;

tnm-install-mibs:
	@for i in $(TNM_INSTALL_DIR)/mibs ; \
	    do \
	    if [ ! -d $$i ] ; then \
		echo "Making directory $$i"; \
		$(MKDIR) -p $$i; \
		chmod 755 $$i; \
		else true; \
		fi; \
	    done;
	@for e in -SMI -TC -TM -MIB -CONF -TYPES ;  \
	    do \
	    	for i in $(TNM_MIB_DIR)/*$$e ; \
		    do \
		    echo "Installing $$i"; \
		    $(INSTALL_DATA) $$i $(TNM_INSTALL_DIR)/mibs ; \
		done ; \
	    done
	@TCLLIBPATH="tmp-install-tnm $(TNM_INSTALL_DIR) $$TCLLIBPATH"; \
	export TCLLIBPATH; \
	TNM_LIBRARY="$(TNM_INSTALL_DIR)"; \
	export TNM_LIBRARY; \
	echo 'foreach f $$tnm(mibs) {puts "Parsing $$f"; Tnm::mib load $$f}; exit' | \
		./scotty

tnm-install-library:
	@for i in $(TNM_INSTALL_DIR)/library ; \
	    do \
	    if [ ! -d $$i ] ; then \
		echo "Making directory $$i"; \
		$(MKDIR) -p $$i; \
		chmod 755 $$i; \
		else true; \
		fi; \
	    done;
	@for i in $(TNM_LIBRARY_DIR)/README $(TNM_LIBRARY) ; \
	    do \
	    echo "Installing $$i"; \
	    $(INSTALL_DATA) $$i $(TNM_INSTALL_DIR)/library; \
	    done
	@$(INSTALL_DATA) $(TNM_LIBRARY_DIR)/pkgIndex.tcl $(TNM_INSTALL_DIR)/library

tnm-install-examples:
	@for i in $(TNM_INSTALL_DIR)/examples ; \
	    do \
	    if [ ! -d $$i ] ; then \
		echo "Making directory $$i"; \
		$(MKDIR) -p $$i; \
		chmod 755 $$i; \
		else true; \
		fi; \
	    done;
	@for i in $(TNM_EXAMPLES) ; do \
	    echo "Installing $$i"; \
	    base=`basename $$i`; \
	    rm -f $(TNM_INSTALL_DIR)/examples/$$base; \
	    sed -e 's+^exec tclsh.*$$+exec $(TCL_TCLSH) "$$0" "$$@"+'\
		-e 's+^exec wish.*$$+exec $(TK_WISH) "$$0" "$$@"+'\
		    $$i > $(TNM_INSTALL_DIR)/examples/$$base; \
	    chmod 755 $(TNM_INSTALL_DIR)/examples/$$base; \
	    $(INSTALL_DATA) $$i.n $(TNM_INSTALL_DIR)/examples; \
	    done

tnm-install-agents:
	@for i in $(TNM_INSTALL_DIR)/agents ; \
	    do \
	    if [ ! -d $$i ] ; then \
		echo "Making directory $$i"; \
		$(MKDIR) -p $$i; \
		chmod 755 $$i; \
		else true; \
		fi; \
	    done;
	@for i in $(TNM_AGENT_DIR)/snmpd ; \
	    do \
	    echo "Installing $$i"; \
	    base=`basename $$i`; \
	    rm -f $(TNM_INSTALL_DIR)/agents/$$base; \
	    sed -e 's+^exec tclsh.*$$+exec $(TCL_TCLSH) "$$0" "$$@"+'\
		    $$i > $(TNM_INSTALL_DIR)/agents/$$base; \
	    chmod 755 $(TNM_INSTALL_DIR)/agents/$$base; \
	    done
	@for i in $(TNM_AGENTS) $(TNM_AGENT_DIR)/README ; \
	    do \
	    echo "Installing $$i"; \
	    $(INSTALL_DATA) $$i $(TNM_INSTALL_DIR)/agents; \
	    done

tnm-install-site:
	@for i in $(TNM_INSTALL_DIR)/site ; \
	    do \
	    if [ ! -d $$i ] ; then \
		echo "Making directory $$i"; \
		$(MKDIR) -p $$i; \
		chmod 755 $$i; \
		else true; \
		fi; \
	    done;
	@if [ ! -f $(TNM_INSTALL_DIR)/site/init.tcl ] ; then \
	    f=$(TNM_INSTALL_DIR)/site/init.tcl; \
	    echo "# Site specific Tnm configuration file." >> $$f; \
	    echo "" >> $$f; \
	    echo "# lappend tnm(mibs) CISCO-SMI.my" >> $$f; \
	    echo "# lappend tnm(mibs) CISCO-TC.my" >> $$f; \
	    echo "# lappend tnm(mibs) CISCO-PRODUCTS-MIB.my" >> $$f; \
	    echo "# lappend tnm(mibs) CISCO-ISDN-MIB.my" >> $$f; \
	    echo "# lappend tnm(mibs) CISCO-FLASH-MIB.my" >> $$f; \
	    echo "# lappend tnm(mibs) CISCO-CDP-MIB.my" >> $$f; \
	    echo "# lappend tnm(mibs) CISCO-IMAGE-MIB.my" >> $$f; \
	    echo "# lappend tnm(mibs) CISCO-CALL-HISTORY-MIB.my" >> $$f; \
	    echo "# lappend tnm(mibs) CISCO-QUEUE-MIB.my" >> $$f; \
	    echo "# lappend tnm(mibs) CISCO-CONFIG-MAN-MIB.my" >> $$f; \
	    echo "# lappend tnm(mibs) CISCO-MEMORY-POOL-MIB.my" >> $$f; \
	    echo "#" >> $$f; \
	    echo "# lappend tnm(mibs) cisco-10-mib.my" >> $$f; \
	fi

tnm-install-icons:
	@for i in $(TNM_INSTALL_DIR)/icons ; \
	    do \
	    if [ ! -d $$i ] ; then \
		echo "Making directory $$i"; \
		$(MKDIR) -p $$i; \
		chmod 755 $$i; \
		else true; \
		fi; \
	    done;

tki-install-bin: tkined$(SHLIB_SUFFIX) tkined $(TKI_LIBRARY_DIR)/pkgIndex.tcl
	@for i in $(BIN_INSTALL_DIR) $(LIB_INSTALL_DIR) $(TKI_INSTALL_DIR) ; \
	    do \
	    if [ ! -d $$i ] ; then \
		echo "Making directory $$i"; \
		$(MKDIR) -p $$i; \
		chmod 755 $$i; \
		else true; \
		fi; \
	    done;
	@echo "Installing tkined as $(BIN_INSTALL_DIR)/tkined$(TKI_VERSION)"
	@$(INSTALL_PROGRAM) tkined $(BIN_INSTALL_DIR)/tkined$(TKI_VERSION)
	@echo "Installing tkined$(TKI_VERSION)$(SHLIB_SUFFIX) as $(LIB_RUNTIME_DIR)/tkined$(TKI_VERSION)$(SHLIB_SUFFIX)"
	@$(INSTALL_DATA) tkined$(SHLIB_SUFFIX) $(LIB_INSTALL_DIR)/tkined$(TKI_VERSION)$(SHLIB_SUFFIX)
	@chmod 555 $(LIB_INSTALL_DIR)/tkined$(TKI_VERSION)$(SHLIB_SUFFIX)
	@echo 'package ifneeded Tkined $(TKI_VERSION) "load $(LIB_RUNTIME_DIR)/tkined$(TKI_VERSION)[info sharedlibextension]"' > $(TKI_INSTALL_DIR)/pkgIndex.tcl
	@$(INSTALL_DATA) $(TKI_DIR)/tkined.defaults $(TKI_INSTALL_DIR)

tki-install-man:
	@for i in $(MAN_INSTALL_DIR) $(MAN1_INSTALL_DIR) $(MANN_INSTALL_DIR) ; \
	    do \
	    if [ ! -d $$i ] ; then \
		echo "Making directory $$i"; \
		$(MKDIR) -p $$i; \
		chmod 755 $$i; \
		else true; \
		fi; \
	    done;
	@cd $(DOC_DIR); for i in $(TKI_DOCS_1); \
	    do \
	    echo "Installing $(TOP_DIR)/doc/$$i"; \
	    rm -f $(MAN1_INSTALL_DIR)/$$i; \
	    sed -e '/man\.macros/r man.macros' -e '/man\.macros/d' \
		-e 's/%TNM_VERSION%/$(TNM_VERSION)/' \
		-e 's/%TKI_VERSION%/$(TKI_VERSION)/' \
		    $$i > $(MAN1_INSTALL_DIR)/$$i; \
	    chmod 444 $(MAN1_INSTALL_DIR)/`basename $$i`; \
	    done;
	@cd $(DOC_DIR); for i in $(TKI_DOCS_N); \
	    do \
	    echo "Installing $(TOP_DIR)/doc/$$i"; \
	    rm -f $(MANN_INSTALL_DIR)/$$i; \
	    sed -e '/man\.macros/r man.macros' -e '/man\.macros/d' \
		-e 's/%TNM_VERSION%/$(TNM_VERSION)/' \
		-e 's/%TKI_VERSION%/$(TKI_VERSION)/' \
		    $$i > $(MANN_INSTALL_DIR)/$$i; \
	    chmod 444 $(MANN_INSTALL_DIR)/`basename $$i`; \
	    done;

tki-install-library:
	@for i in $(TKI_INSTALL_DIR)/library ; \
	    do \
	    if [ ! -d $$i ] ; then \
		echo "Making directory $$i"; \
		$(MKDIR) -p $$i; \
		chmod 755 $$i; \
		else true; \
		fi; \
	    done;
	@for i in $(TKI_LIBRARY) ; \
	    do \
	    echo "Installing $$i"; \
	    $(INSTALL_DATA) $$i $(TKI_INSTALL_DIR)/library; \
	    done
	@$(INSTALL_DATA) $(TKI_LIBRARY_DIR)/pkgIndex.tcl $(TKI_INSTALL_DIR)/library

tki-install-bitmaps:
	@for i in $(TKI_INSTALL_DIR)/bitmaps ; \
	    do \
	    if [ ! -d $$i ] ; then \
		echo "Making directory $$i"; \
		$(MKDIR) -p $$i; \
		chmod 755 $$i; \
		else true; \
		fi; \
	    done;
	@for i in $(TKI_DIR)/bitmaps/*.xbm ; \
	    do \
	    echo "Installing $$i"; \
	    $(INSTALL_DATA) $$i $(TKI_INSTALL_DIR)/bitmaps ; \
	    done

tki-install-apps:
	@for i in $(TKI_INSTALL_DIR)/apps ; \
	    do \
	    if [ ! -d $$i ] ; then \
		echo "Making directory $$i"; \
		$(MKDIR) -p $$i; \
		chmod 755 $$i; \
		else true; \
		fi; \
	    done;
	@for i in $(TKI_APPS) $(TNM_EXAMPLES_DIR)/mibtree ; \
	    do \
	    echo "Installing $$i"; \
	    base=`basename $$i`; \
	    rm -f $(TKI_INSTALL_DIR)/apps/$$base; \
	    sed -e 's+^exec tclsh.*$$+exec $(TCL_TCLSH) "$$0" "$$@"+'\
		-e 's+^exec wish.*$$+exec $(TK_WISH) "$$0" "$$@"+'\
		    $$i > $(TKI_INSTALL_DIR)/apps/$$base; \
	    chmod 755 $(TKI_INSTALL_DIR)/apps/$$base; \
	    done
	@for i in $(TKI_MISC) ; \
	    do \
	    echo "Installing $$i"; \
	    $(INSTALL_DATA) $$i $(TKI_INSTALL_DIR)/apps; \
	    done
	@TCLLIBPATH="$(TNM_INSTALL_DIR) $$TCLLIBPATH"; \
	export TCLLIBPATH; \
	echo 'cd $(TKI_INSTALL_DIR)/apps; auto_mkindex . library.tcl; exit' | \
		$(TCL_TCLSH)

sinstall: nmicmpd nmtrapd
	@for i in $(BIN_INSTALL_DIR) ; \
	    do \
	    if [ ! -d $$i ] ; then \
		echo "Making directory $$i"; \
		$(MKDIR) -p $$i; \
		chmod 755 $$i; \
		else true; \
		fi; \
	    done;
	@for i in nmicmpd nmtrapd ; \
	    do \
	    echo "Installing $$i"; \
	    $(INSTALL_PROGRAM) -o root -m 4755 $$i $(BIN_INSTALL_DIR)/$$i; \
	    done

uninstall: tnm-uninstall tnm-uninstall-man tki-uninstall tki-uninstall-man

tnm-uninstall:
	@echo "Removing scotty$(TNM_VERSION) and tnm$(TNM_VERSION)$(SHLIB_SUFFIX)"
	@rm -f $(BIN_INSTALL_DIR)/scotty$(TNM_VERSION)
	@rm -f $(LIB_INSTALL_DIR)/tnm$(TNM_VERSION)$(SHLIB_SUFFIX)
	@for i in $(LIB_INSTALL_DIR)/tnm$(TNM_VERSION)/* ; \
	    do \
	    if [ "`basename $$i`" != "site" ] ; then \
		echo "Removing $$i"; \
		rm -rf $$i; \
		else true; \
	        fi; \
	    done
	@if [ -d $(LIB_INSTALL_DIR)/tnm$(TNM_VERSION)/site ] ; then \
	    echo "Preserving $(LIB_INSTALL_DIR)/tnm$(TNM_VERSION)/site"; \
	    else rm -rf $(LIB_INSTALL_DIR)/tnm$(TNM_VERSION); \
	    fi

tki-uninstall:
	@echo "Removing tkined$(TNM_VERSION) and tkined$(TNM_VERSION)$(SHLIB_SUFFIX)"
	@rm -f $(BIN_INSTALL_DIR)/tkined$(TKI_VERSION)
	@rm -f $(LIB_INSTALL_DIR)/tkined$(TKI_VERSION)$(SHLIB_SUFFIX)
	@for i in $(LIB_INSTALL_DIR)/tkined$(TKI_VERSION)/* ; \
	    do \
	    if [ "`basename $$i`" != "site" ] ; then \
		echo "Removing $$i"; \
		rm -rf $$i; \
		else true; \
	        fi; \
	    done
	@if [ "`ls $(LIB_INSTALL_DIR)/tkined$(TKI_VERSION)/site`" ] ; then \
	    echo "Preserving $(LIB_INSTALL_DIR)/tkined$(TKI_VERSION)/site"; \
	    else rm -rf $(LIB_INSTALL_DIR)/tkined$(TKI_VERSION); \
	    fi

tnm-uninstall-man:
	@for i in $(TNM_DOCS_1); \
	    do \
            echo "Removing $(MAN1_INSTALL_DIR)/$$i"; \
	    rm -f $(MAN1_INSTALL_DIR)/$$i; \
	    done
	@for i in $(TNM_DOCS_8); \
	    do \
            echo "Removing $(MAN8_INSTALL_DIR)/$$i"; \
	    rm -f $(MAN8_INSTALL_DIR)/$$i; \
	    done
	@for i in $(TNM_DOCS_N); \
	    do \
            echo "Removing $(MANN_INSTALL_DIR)/$$i"; \
	    rm -f $(MANN_INSTALL_DIR)/$$i; \
	    done

tki-uninstall-man:
	@for i in $(TKI_DOCS_1); \
	    do \
            echo "Removing $(MAN1_INSTALL_DIR)/$$i"; \
	    rm -f $(MAN1_INSTALL_DIR)/$$i; \
	    done
	@for i in $(TKI_DOCS_N); \
	    do \
            echo "Removing $(MANN_INSTALL_DIR)/$$i"; \
	    rm -f $(MANN_INSTALL_DIR)/$$i; \
	    done

clean:
	@rm -f $(TNM_OBJS) $(TKI_OBJS) scotty.o nmicmpd.o nmtrapd.o
	@rm -f scotty nmicmpd nmtrapd tkined
	@rm -f tnm$(SHLIB_SUFFIX) tkined$(SHLIB_SUFFIX)
	@rm -f core *_svc.c *~ *.bak so_locations
	@rm -f map.so tnmMapClnt.o tnmMapAppl.o
	@rm -f mib tnmMibYacc.[cho] tnmMibScan.[co]
	@rm -f tnm.ps tkined.ps manual.ps
	@rm -f *_pure_*.o

distclean: clean
	@rm -f mount.h mount_clnt.c mount_svc.c mount_xdr.c
	@rm -f ether.h ether_clnt.c ether_svc.c ether_xdr.c
	@rm -f rstat.h rstat_clnt.c rstat_svc.c rstat_xdr.c
	@rm -f pcnfsd.h pcnfsd_clnt.c pcnfsd_svc.c pcnfsd_xdr.c
	@rm -f mount.x ether.x rstat.x pcnfsd.x
	@rm -f Makefile config.log config.cache config.status config.h
	@rm -f $(WIN_DIR)/*.dll $(WIN_DIR)/*.obj
	@rm -f $(WIN_DIR)/*.cfg $(WIN_DIR)/*.lib $(WIN_DIR)/*.exp
	@rm -f `find $(TOP_DIR) \( -name '*.orig' -o -name '*.bak' \
		-o -name '*~' -o -name TAGS \) -print`

configure: configure.in aclocal.m4
	autoconf
	sed -e 's/TCLSH8.3/TCLSH83/g' < configure > configure.new
	mv configure.new configure
	chmod a+x configure

depend:
	makedepend -- -I$(TNM_SNMP_DIR) -- $(TNM_SRCS)

tnm.ps:
	(cd $(DOC_DIR); groff -man $(TNM_DOCS_1) $(TNM_DOCS_8) $(TNM_DOCS_N)) > tnm.ps

tkined.ps:
	(cd $(DOC_DIR); groff -man $(TKI_DOCS_1) $(TKI_DOCS_N)) > tkined.ps

manual.ps: $(TNM_DOCS) $(TKI_DOCS)
	(cd $(DOC_DIR); groff -man $(TNM_DOCS) $(TKI_DOCS)) > manual.ps

check-version: clean
	(cd $(TOP_DIR); find . -type f -print > MANIFEST)
	(cd $(TOP_DIR); grep -i "tnm.*2\.2\.0" `cat MANIFEST`; true)
	(cd $(TOP_DIR); grep -i "tki.*1\.4\.5" `cat MANIFEST`; true)
	(cd $(TOP_DIR); grep -i "tcl.*8\.2" `cat MANIFEST`; true)
	(cd $(TOP_DIR); grep -i "tk.*8\.2" `cat MANIFEST`; true)
	rm -f $(TOP_DIR)/MANIFEST

tar: distclean
	rm -f $(TOP_DIR)/scotty-?.*.tar.gz $(TOP_DIR)/scotty-?.*.tar
	cd $(TOP_DIR); pwd=`pwd`; pwd=`basename $$pwd`; \
	cd ..; tar cvf /tmp/$$pwd.tar $$pwd/???*; \
	mv /tmp/$$pwd.tar $$pwd; \
	gzip -v -9 $$pwd/$$pwd.tar

#----------------------------------------------------------------
# Below are all the dependencies and rules required to make every 
# make happy. These rules are used to build a loadable library.
#----------------------------------------------------------------

nmicmpd.o: $(UNIX_DIR)/nmicmpd.c
	$(CC) -c $(CFLAGS) -I. $(UNIX_DIR)/nmicmpd.c

nmicmpd: nmicmpd.o
	@rm -f nmicmpd
	$(LD) $(LD_FLAGS) -o nmicmpd nmicmpd.o $(NM_LIBS)

nmtrapd.o: $(UNIX_DIR)/nmtrapd.c
	$(CC) -c $(CFLAGS) -I. $(UNIX_DIR)/nmtrapd.c

nmtrapd: nmtrapd.o
	@rm -f nmtrapd
	$(LD) $(LD_FLAGS) -o nmtrapd nmtrapd.o $(NM_LIBS)

scotty.o: $(UNIX_DIR)/scotty.c
	$(CC) -c $(TNM_CC_SWITCHES) -I. -I$(TNM_GENERIC_DIR) $(TCL_INCLUDES) $(UNIX_DIR)/scotty.c

tnmJob.o: $(TNM_GENERIC_DIR)/tnmJob.c
	$(CC) -c $(TNM_CC_SWITCHES) $(TNM_GENERIC_DIR)/tnmJob.c

tnmIned.o: $(TNM_GENERIC_DIR)/tnmIned.c
	$(CC) -c $(TNM_CC_SWITCHES) $(TNM_GENERIC_DIR)/tnmIned.c

tnmSyslog.o: $(TNM_GENERIC_DIR)/tnmSyslog.c
	$(CC) -c $(TNM_CC_SWITCHES) $(TNM_GENERIC_DIR)/tnmSyslog.c

tnmIcmp.o: $(TNM_GENERIC_DIR)/tnmIcmp.c
	$(CC) -c $(TNM_CC_SWITCHES) $(TNM_GENERIC_DIR)/tnmIcmp.c

tnmDns.o: $(TNM_GENERIC_DIR)/tnmDns.c
	$(CC) -c $(TNM_CC_SWITCHES) $(TNM_GENERIC_DIR)/tnmDns.c

tnmUdp.o: $(TNM_GENERIC_DIR)/tnmUdp.c
	$(CC) -c $(TNM_CC_SWITCHES) $(TNM_GENERIC_DIR)/tnmUdp.c

tnmSunRpc.o: $(TNM_GENERIC_DIR)/tnmSunRpc.c mount.h ether.h rstat.h pcnfsd.h
	$(CC) -c $(TNM_CC_SWITCHES) $(TNM_GENERIC_DIR)/tnmSunRpc.c

tnmNtp.o: $(TNM_GENERIC_DIR)/tnmNtp.c
	$(CC) -c $(TNM_CC_SWITCHES) $(TNM_GENERIC_DIR)/tnmNtp.c

tnmNetdb.o: $(TNM_GENERIC_DIR)/tnmNetdb.c
	$(CC) -c $(TNM_CC_SWITCHES) $(TNM_GENERIC_DIR)/tnmNetdb.c

tnmMap.o: $(TNM_GENERIC_DIR)/tnmMap.c
	$(CC) -c $(TNM_CC_SWITCHES) $(TNM_GENERIC_DIR)/tnmMap.c

tnmMapUtil.o: $(TNM_GENERIC_DIR)/tnmMapUtil.c
	$(CC) -c $(TNM_CC_SWITCHES) $(TNM_GENERIC_DIR)/tnmMapUtil.c

tnmMapEvent.o: $(TNM_GENERIC_DIR)/tnmMapEvent.c
	$(CC) -c $(TNM_CC_SWITCHES) $(TNM_GENERIC_DIR)/tnmMapEvent.c

tnmMapNode.o: $(TNM_GENERIC_DIR)/tnmMapNode.c
	$(CC) -c $(TNM_CC_SWITCHES) $(TNM_GENERIC_DIR)/tnmMapNode.c

tnmMapNet.o: $(TNM_GENERIC_DIR)/tnmMapNet.c
	$(CC) -c $(TNM_CC_SWITCHES) $(TNM_GENERIC_DIR)/tnmMapNet.c

tnmMapLink.o: $(TNM_GENERIC_DIR)/tnmMapLink.c
	$(CC) -c $(TNM_CC_SWITCHES) $(TNM_GENERIC_DIR)/tnmMapLink.c

tnmMapPort.o: $(TNM_GENERIC_DIR)/tnmMapPort.c
	$(CC) -c $(TNM_CC_SWITCHES) $(TNM_GENERIC_DIR)/tnmMapPort.c

tnmMapGroup.o: $(TNM_GENERIC_DIR)/tnmMapGroup.c
	$(CC) -c $(TNM_CC_SWITCHES) $(TNM_GENERIC_DIR)/tnmMapGroup.c

tnmObj.o: $(TNM_GENERIC_DIR)/tnmObj.c
	$(CC) -c $(TNM_CC_SWITCHES) $(TNM_GENERIC_DIR)/tnmObj.c

tnmSmx.o: $(TNM_GENERIC_DIR)/tnmSmx.c
	$(CC) -c $(TNM_CC_SWITCHES) $(TNM_GENERIC_DIR)/tnmSmx.c

tnmUnixInit.o: $(UNIX_DIR)/tnmUnixInit.c
	$(CC) -c $(TNM_CC_SWITCHES) -DTNMLIB=\"$(TNM_INSTALL_DIR)\" -DTKINEDLIB=\"$(TKI_INSTALL_DIR)\" $(UNIX_DIR)/tnmUnixInit.c

tnmUnixLog.o: $(UNIX_DIR)/tnmUnixLog.c
	$(CC) -c $(TNM_CC_SWITCHES) $(UNIX_DIR)/tnmUnixLog.c

tnmUnixSocket.o: $(UNIX_DIR)/tnmUnixSocket.c
	$(CC) -c $(TNM_CC_SWITCHES) $(UNIX_DIR)/tnmUnixSocket.c

tnmUnixIcmp.o: $(UNIX_DIR)/tnmUnixIcmp.c
	$(CC) -c $(TNM_CC_SWITCHES) -DNMICMPD=\"$(NMICMPD)\" $(UNIX_DIR)/tnmUnixIcmp.c

tnmUnixSnmp.o: $(UNIX_DIR)/tnmUnixSnmp.c
	$(CC) -c $(TNM_CC_SWITCHES) -I$(TNM_SNMP_DIR) -DNMTRAPD=\"$(NMTRAPD)\" $(UNIX_DIR)/tnmUnixSnmp.c

tnmInit.o: $(TNM_GENERIC_DIR)/tnmInit.c
	$(CC) -c $(TNM_CC_SWITCHES) $(TNM_GENERIC_DIR)/tnmInit.c

tnmUtil.o: $(TNM_GENERIC_DIR)/tnmUtil.c
	$(CC) -c $(TNM_CC_SWITCHES) $(TNM_GENERIC_DIR)/tnmUtil.c

mount.x: $(TNM_GENERIC_DIR)/mount.x
	cp $(TNM_GENERIC_DIR)/mount.x .

mount_xdr.c mount_clnt.c mount.h: mount.x
	$(RPCGEN) mount.x

mount_xdr.o: mount_xdr.c
	$(CC) -c $(TNM_CC_SWITCHES) mount_xdr.c

mount_clnt.o: mount_clnt.c
	$(CC) -c $(TNM_CC_SWITCHES) mount_clnt.c

ether.x: $(TNM_GENERIC_DIR)/ether.x
	cp $(TNM_GENERIC_DIR)/ether.x .

ether_xdr.c ether_clnt.c ether.h: ether.x
	$(RPCGEN) ether.x

ether_xdr.o: ether_xdr.c
	$(CC) -c $(TNM_CC_SWITCHES) ether_xdr.c

ether_clnt.o: ether_clnt.c
	$(CC) -c $(TNM_CC_SWITCHES) ether_clnt.c

rstat.x: $(TNM_GENERIC_DIR)/rstat.x
	cp $(TNM_GENERIC_DIR)/rstat.x .

rstat_xdr.c rstat_clnt.c rstat.h: rstat.x
	$(RPCGEN) rstat.x

rstat_xdr.o: rstat_xdr.c
	$(CC) -c $(TNM_CC_SWITCHES) rstat_xdr.c

rstat_clnt.o: rstat_clnt.c
	$(CC) -c $(TNM_CC_SWITCHES) rstat_clnt.c

pcnfsd.x: $(TNM_GENERIC_DIR)/pcnfsd.x
	cp $(TNM_GENERIC_DIR)/pcnfsd.x .

pcnfsd_xdr.c pcnfsd_clnt.c pcnfsd.h: pcnfsd.x
	$(RPCGEN) pcnfsd.x

pcnfsd_xdr.o: pcnfsd_xdr.c
	$(CC) -c $(TNM_CC_SWITCHES) pcnfsd_xdr.c

pcnfsd_clnt.o: pcnfsd_clnt.c
	$(CC) -c $(TNM_CC_SWITCHES) pcnfsd_clnt.c

tnmAsn1.o: $(TNM_SNMP_DIR)/tnmAsn1.c
	$(CC) -c $(TNM_CC_SWITCHES) -I$(TNM_SNMP_DIR) $(TNM_SNMP_DIR)/tnmAsn1.c

tnmOidObj.o: $(TNM_SNMP_DIR)/tnmOidObj.c
	$(CC) -c $(TNM_CC_SWITCHES) -I$(TNM_SNMP_DIR) $(TNM_SNMP_DIR)/tnmOidObj.c

tnmMD5.o: $(TNM_SNMP_DIR)/tnmMD5.c
	$(CC) -c $(TNM_CC_SWITCHES) -I$(TNM_SNMP_DIR) $(TNM_SNMP_DIR)/tnmMD5.c

tnmSHA.o: $(TNM_SNMP_DIR)/tnmSHA.c
	$(CC) -c $(TNM_CC_SWITCHES) -I$(TNM_SNMP_DIR) $(TNM_SNMP_DIR)/tnmSHA.c

tnmSnmpNet.o: $(TNM_SNMP_DIR)/tnmSnmpNet.c
	$(CC) -c $(TNM_CC_SWITCHES) -I$(TNM_SNMP_DIR) $(TNM_SNMP_DIR)/tnmSnmpNet.c

tnmSnmpUtil.o: $(TNM_SNMP_DIR)/tnmSnmpUtil.c
	$(CC) -c $(TNM_CC_SWITCHES) -I$(TNM_SNMP_DIR) $(TNM_SNMP_DIR)/tnmSnmpUtil.c

tnmSnmpUsm.o: $(TNM_SNMP_DIR)/tnmSnmpUsm.c
	$(CC) -c $(TNM_CC_SWITCHES) -I$(TNM_SNMP_DIR) $(TNM_SNMP_DIR)/tnmSnmpUsm.c

tnmSnmpInst.o: $(TNM_SNMP_DIR)/tnmSnmpInst.c
	$(CC) -c $(TNM_CC_SWITCHES) -I$(TNM_SNMP_DIR) $(TNM_SNMP_DIR)/tnmSnmpInst.c

tnmSnmpSend.o: $(TNM_SNMP_DIR)/tnmSnmpSend.c
	$(CC) -c $(TNM_CC_SWITCHES) -I$(TNM_SNMP_DIR) $(TNM_SNMP_DIR)/tnmSnmpSend.c

tnmSnmpRecv.o: $(TNM_SNMP_DIR)/tnmSnmpRecv.c
	$(CC) -c $(TNM_CC_SWITCHES) -I$(TNM_SNMP_DIR) $(TNM_SNMP_DIR)/tnmSnmpRecv.c

tnmSnmpAgent.o: $(TNM_SNMP_DIR)/tnmSnmpAgent.c
	$(CC) -c $(TNM_CC_SWITCHES) -I$(TNM_SNMP_DIR) $(TNM_SNMP_DIR)/tnmSnmpAgent.c

tnmSnmpTcl.o: $(TNM_SNMP_DIR)/tnmSnmpTcl.c
	$(CC) -c $(TNM_CC_SWITCHES) -I$(TNM_SNMP_DIR) $(TNM_SNMP_DIR)/tnmSnmpTcl.c

tnmMibUtil.o: $(TNM_SNMP_DIR)/tnmMibUtil.c
	$(CC) -c $(TNM_CC_SWITCHES) -I$(TNM_SNMP_DIR) $(TNM_SNMP_DIR)/tnmMibUtil.c

tnmMibParser.o: $(TNM_SNMP_DIR)/tnmMibParser.c
	$(CC) -c $(TNM_CC_SWITCHES) -I$(TNM_SNMP_DIR) $(TNM_SNMP_DIR)/tnmMibParser.c

tnmMibTree.o: $(TNM_SNMP_DIR)/tnmMibTree.c
	$(CC) -c $(TNM_CC_SWITCHES) -I$(TNM_SNMP_DIR) $(TNM_SNMP_DIR)/tnmMibTree.c

tnmMibFrozen.o: $(TNM_SNMP_DIR)/tnmMibFrozen.c
	$(CC) -c $(TNM_CC_SWITCHES) -I$(TNM_SNMP_DIR) $(TNM_SNMP_DIR)/tnmMibFrozen.c

tnmMibTcl.o: $(TNM_SNMP_DIR)/tnmMibTcl.c
	$(CC) -c $(TNM_CC_SWITCHES) -I$(TNM_SNMP_DIR) $(TNM_SNMP_DIR)/tnmMibTcl.c

tnmSmiTcl.o: $(TNM_SNMP_DIR)/tnmSmiTcl.c
	$(CC) -c $(TNM_CC_SWITCHES) -I$(TNM_SNMP_DIR) $(TNM_SNMP_DIR)/tnmSmiTcl.c

#------------------------------------------------------------------
# These rules are used to build a dynamic loadable tkined library.
#------------------------------------------------------------------

tkiEditor.o: $(TKI_GENERIC_DIR)/tkiEditor.c
	$(CC) -c $(TKI_CC_SWITCHES) $(TKI_GENERIC_DIR)/tkiEditor.c

tkiObjects.o: $(TKI_GENERIC_DIR)/tkiObjects.c
	$(CC) -c $(TKI_CC_SWITCHES) $(TKI_GENERIC_DIR)/tkiObjects.c

tkiMethods.o: $(TKI_GENERIC_DIR)/tkiMethods.c
	$(CC) -c $(TKI_CC_SWITCHES) $(TKI_GENERIC_DIR)/tkiMethods.c

tkiMisc.o: $(TKI_GENERIC_DIR)/tkiMisc.c
	$(CC) -c $(TKI_CC_SWITCHES) $(TKI_GENERIC_DIR)/tkiMisc.c

tkiFlash.o: $(TKI_GENERIC_DIR)/tkiFlash.c
	$(CC) -c $(TKI_CC_SWITCHES) $(TKI_GENERIC_DIR)/tkiFlash.c

tkiBarchart.o: $(TKI_GENERIC_DIR)/tkiBarchart.c
	$(CC) -c $(TKI_CC_SWITCHES) $(TKI_GENERIC_DIR)/tkiBarchart.c

tkiStripchart.o: $(TKI_GENERIC_DIR)/tkiStripchart.c
	$(CC) -c $(TKI_CC_SWITCHES) $(TKI_GENERIC_DIR)/tkiStripchart.c

tkiUtil.o: $(TKI_GENERIC_DIR)/tkiUtil.c
	$(CC) -c $(TKI_CC_SWITCHES) $(TKI_GENERIC_DIR)/tkiUtil.c

tkiInit.o: $(TKI_GENERIC_DIR)/tkiInit.c
	$(CC) -c $(TKI_CC_SWITCHES) $(TKI_GENERIC_DIR)/tkiInit.c

tkiUnixInit.o: $(UNIX_DIR)/tkiUnixInit.c
	$(CC) -c $(TKI_CC_SWITCHES) -DTKINEDLIB=\"$(TKI_INSTALL_DIR)\" $(UNIX_DIR)/tkiUnixInit.c

# DO NOT DELETE THIS LINE -- make depend depends on it.
